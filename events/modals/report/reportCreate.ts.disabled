import Event from "../../../classes/structs/Event";

import reportModel from '../../../models/reportModel';
const isImgUrl = require('image-url-validator').default;
import discord from 'discord.js';

export default new Event().setData("modal.reportCreate", async (client, interaction, args) => {
    let reports = await reportModel.find()
    let latestId = reports.pop()?.id + 1 || 1
    let ids = interaction.fields.getTextInputValue('idInput')
    let reason = interaction.fields.getTextInputValue('reasonInput')
    let proof = interaction.fields.getTextInputValue('proofInput')
    let correctedIds = ids.match(/\d{18}(\d*)(?=[^#\w\d]|$)/g)
    if (!correctedIds) {
        return interaction.reply({ ephemeral: true, content: `O meu algoritmo para separar ids não conseguiu identificar ids no texto que você me passou!` })
    }
    let imageLinks: string[] = []
    let badLinks: string[] = []
    let imgLink: string;
    for (imgLink of proof.split('\n')) {
        if (await isImgUrl(imgLink)) {
            imageLinks.push(imgLink)

        } else {
            badLinks.push(imgLink)

        }
    }
    if (badLinks.length > 0) {
        return interaction.reply({ ephemeral: true, content: `Um ou mais links de imagem não tinham uma imagem:\n${badLinks.join('\n')}` })
    }
    const report = {
        id: latestId,
        reportedIds: correctedIds,
        reason: reason,
        images: imageLinks,
        userId: args[0],
        guildId: args[1],
        level: parseInt(args[2]),
    }
    client.emit('reportCreate', report)
    let profile = await reportModel.create(report);
    await profile.save();
    await interaction.reply({ ephemeral: true, content: `Criei com sucesso o seu report com o id: ${latestId}` })
    const mainGuild = client.guilds.cache.get('896047806454837278')
    const channel = mainGuild.channels.cache.get('896172209725403197') as discord.TextChannel|undefined
    if (!channel) console.log(`Wiren deletou o chat dnvo sem me avisar`)
    let guild = client.guilds.cache.get(report.guildId)
    if (!guild) guild = {
        name: `Não achei o servidor`
    } as unknown as discord.Guild
    let user = await guild.members.fetch(report.userId).catch(() => {  })
    if (!user) user = {
        user: { tag: `Não achei o user` }
    } as unknown as discord.GuildMember
    let idss;
    if (report.reportedIds.length > 45) {
        let id = report.reportedIds.slice(0, 44)
        idss = id.join(', ') + "\nComo existiam mais de 45 ids alguns estão ocultos..."
    } else {
        idss = report.reportedIds.join(', ')
    }
    let index = 0
    const embed = new discord.EmbedBuilder()
        .setTitle(`Report de ${user.user.tag} (${guild.name})`)
        .setFields([
            {
                name: `Razão:`,
                value: report.reason
            },
            {
                name: `Ids:`,
                value: idss
            }
        ])
        .setImage(report.images[index])
        .setFooter({ text: `Imagem ${index + 1}/${report.images.length} | Id: ${report.id}` })
        .setColor(`#ffffff`)

    let message = await channel.send({ embeds: [embed]})
    await message.crosspost().then(() => {
        console.log('[Runtime Info] Report message crossposted with success')
    })
})